[{"name":"abstract class AbstractPivotIterator<out E, P : Comparable<P>, V>(revertible: RevertibleIterator<E, P>, init: (P) -> V) : PivotIterator<E, P, V> , RevertibleIterator<E, P> ","description":"io.github.aeckar.iteration.AbstractPivotIterator","location":"more.collections/io.github.aeckar.iteration/-abstract-pivot-iterator/index.html","searchKeys":["AbstractPivotIterator","abstract class AbstractPivotIterator<out E, P : Comparable<P>, V>(revertible: RevertibleIterator<E, P>, init: (P) -> V) : PivotIterator<E, P, V> , RevertibleIterator<E, P> ","io.github.aeckar.iteration.AbstractPivotIterator"]},{"name":"abstract class ListNode<Self : ListNode<Self>> : Node<Self> ","description":"io.github.aeckar.collections.ListNode","location":"more.collections/io.github.aeckar.collections/-list-node/index.html","searchKeys":["ListNode","abstract class ListNode<Self : ListNode<Self>> : Node<Self> ","io.github.aeckar.collections.ListNode"]},{"name":"abstract class PositionalIterator<out T>(position: Int = 0) : Iterator<T> ","description":"io.github.aeckar.iteration.PositionalIterator","location":"more.collections/io.github.aeckar.iteration/-positional-iterator/index.html","searchKeys":["PositionalIterator","abstract class PositionalIterator<out T>(position: Int = 0) : Iterator<T> ","io.github.aeckar.iteration.PositionalIterator"]},{"name":"abstract fun advance(places: Int)","description":"io.github.aeckar.iteration.RevertibleIterator.advance","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/advance.html","searchKeys":["advance","abstract fun advance(places: Int)","io.github.aeckar.iteration.RevertibleIterator.advance"]},{"name":"abstract fun count(element: E): Int","description":"io.github.aeckar.collections.MultiSet.count","location":"more.collections/io.github.aeckar.collections/-multi-set/count.html","searchKeys":["count","abstract fun count(element: E): Int","io.github.aeckar.collections.MultiSet.count"]},{"name":"abstract fun here(): V","description":"io.github.aeckar.iteration.PivotIterator.here","location":"more.collections/io.github.aeckar.iteration/-pivot-iterator/here.html","searchKeys":["here","abstract fun here(): V","io.github.aeckar.iteration.PivotIterator.here"]},{"name":"abstract fun linkedString(): String","description":"io.github.aeckar.collections.Node.linkedString","location":"more.collections/io.github.aeckar.collections/-node/linked-string.html","searchKeys":["linkedString","abstract fun linkedString(): String","io.github.aeckar.collections.Node.linkedString"]},{"name":"abstract fun nextChar(): Char","description":"io.github.aeckar.iteration.CharIterator.nextChar","location":"more.collections/io.github.aeckar.iteration/-char-iterator/next-char.html","searchKeys":["nextChar","abstract fun nextChar(): Char","io.github.aeckar.iteration.CharIterator.nextChar"]},{"name":"abstract fun peek(): E","description":"io.github.aeckar.iteration.RevertibleIterator.peek","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/peek.html","searchKeys":["peek","abstract fun peek(): E","io.github.aeckar.iteration.RevertibleIterator.peek"]},{"name":"abstract fun peekChar(): Char","description":"io.github.aeckar.iteration.CharRevertibleIterator.peekChar","location":"more.collections/io.github.aeckar.iteration/-char-revertible-iterator/peek-char.html","searchKeys":["peekChar","abstract fun peekChar(): Char","io.github.aeckar.iteration.CharRevertibleIterator.peekChar"]},{"name":"abstract fun pivots(): List<DataPivot<P, V>>","description":"io.github.aeckar.iteration.PivotIterator.pivots","location":"more.collections/io.github.aeckar.iteration/-pivot-iterator/pivots.html","searchKeys":["pivots","abstract fun pivots(): List<DataPivot<P, V>>","io.github.aeckar.iteration.PivotIterator.pivots"]},{"name":"abstract fun position(): P","description":"io.github.aeckar.iteration.RevertibleIterator.position","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/position.html","searchKeys":["position","abstract fun position(): P","io.github.aeckar.iteration.RevertibleIterator.position"]},{"name":"abstract fun remove()","description":"io.github.aeckar.iteration.Removable.remove","location":"more.collections/io.github.aeckar.iteration/-removable/remove.html","searchKeys":["remove","abstract fun remove()","io.github.aeckar.iteration.Removable.remove"]},{"name":"abstract fun removeSave()","description":"io.github.aeckar.iteration.RevertibleIterator.removeSave","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/remove-save.html","searchKeys":["removeSave","abstract fun removeSave()","io.github.aeckar.iteration.RevertibleIterator.removeSave"]},{"name":"abstract fun revert()","description":"io.github.aeckar.iteration.RevertibleIterator.revert","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/revert.html","searchKeys":["revert","abstract fun revert()","io.github.aeckar.iteration.RevertibleIterator.revert"]},{"name":"abstract fun save()","description":"io.github.aeckar.iteration.RevertibleIterator.save","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/save.html","searchKeys":["save","abstract fun save()","io.github.aeckar.iteration.RevertibleIterator.save"]},{"name":"abstract operator fun get(index: Int): Boolean","description":"io.github.aeckar.collections.BooleanList.get","location":"more.collections/io.github.aeckar.collections/-boolean-list/get.html","searchKeys":["get","abstract operator fun get(index: Int): Boolean","io.github.aeckar.collections.BooleanList.get"]},{"name":"abstract operator fun get(index: Int): Double","description":"io.github.aeckar.collections.DoubleList.get","location":"more.collections/io.github.aeckar.collections/-double-list/get.html","searchKeys":["get","abstract operator fun get(index: Int): Double","io.github.aeckar.collections.DoubleList.get"]},{"name":"abstract operator fun get(index: Int): Int","description":"io.github.aeckar.collections.IntList.get","location":"more.collections/io.github.aeckar.collections/-int-list/get.html","searchKeys":["get","abstract operator fun get(index: Int): Int","io.github.aeckar.collections.IntList.get"]},{"name":"abstract operator fun get(index: Int): Long","description":"io.github.aeckar.collections.LongList.get","location":"more.collections/io.github.aeckar.collections/-long-list/get.html","searchKeys":["get","abstract operator fun get(index: Int): Long","io.github.aeckar.collections.LongList.get"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"io.github.aeckar.iteration.RevertibleIterator.equals","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","io.github.aeckar.iteration.RevertibleIterator.equals"]},{"name":"abstract operator override fun next(): Char","description":"io.github.aeckar.iteration.CharIterator.next","location":"more.collections/io.github.aeckar.iteration/-char-iterator/next.html","searchKeys":["next","abstract operator override fun next(): Char","io.github.aeckar.iteration.CharIterator.next"]},{"name":"abstract override fun hashCode(): Int","description":"io.github.aeckar.iteration.RevertibleIterator.hashCode","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","io.github.aeckar.iteration.RevertibleIterator.hashCode"]},{"name":"abstract override fun subList(fromIndex: Int, toIndex: Int): ReadOnlyList<E>","description":"io.github.aeckar.collections.ReadOnlyList.subList","location":"more.collections/io.github.aeckar.collections/-read-only-list/sub-list.html","searchKeys":["subList","abstract override fun subList(fromIndex: Int, toIndex: Int): ReadOnlyList<E>","io.github.aeckar.collections.ReadOnlyList.subList"]},{"name":"abstract override fun toString(): String","description":"io.github.aeckar.collections.TreeNode.toString","location":"more.collections/io.github.aeckar.collections/-tree-node/to-string.html","searchKeys":["toString","abstract override fun toString(): String","io.github.aeckar.collections.TreeNode.toString"]},{"name":"abstract override fun toString(): String","description":"io.github.aeckar.iteration.RevertibleIterator.toString","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/to-string.html","searchKeys":["toString","abstract override fun toString(): String","io.github.aeckar.iteration.RevertibleIterator.toString"]},{"name":"abstract override val children: MutableList<Self>","description":"io.github.aeckar.collections.MutableTreeNode.children","location":"more.collections/io.github.aeckar.collections/-mutable-tree-node/children.html","searchKeys":["children","abstract override val children: MutableList<Self>","io.github.aeckar.collections.MutableTreeNode.children"]},{"name":"abstract val element: E","description":"io.github.aeckar.collections.DataNode.element","location":"more.collections/io.github.aeckar.collections/-data-node/element.html","searchKeys":["element","abstract val element: E","io.github.aeckar.collections.DataNode.element"]},{"name":"abstract val size: Int","description":"io.github.aeckar.collections.PrimitiveList.size","location":"more.collections/io.github.aeckar.collections/-primitive-list/size.html","searchKeys":["size","abstract val size: Int","io.github.aeckar.collections.PrimitiveList.size"]},{"name":"class DataListNode<E> : ListNode<DataListNode<E>> , DataNode<DataListNode<E>, E> ","description":"io.github.aeckar.collections.DataListNode","location":"more.collections/io.github.aeckar.collections/-data-list-node/index.html","searchKeys":["DataListNode","class DataListNode<E> : ListNode<DataListNode<E>> , DataNode<DataListNode<E>, E> ","io.github.aeckar.collections.DataListNode"]},{"name":"class DataPivot<P : Comparable<P>, V> : ListNode<DataPivot<P, V>> ","description":"io.github.aeckar.collections.DataPivot","location":"more.collections/io.github.aeckar.collections/-data-pivot/index.html","searchKeys":["DataPivot","class DataPivot<P : Comparable<P>, V> : ListNode<DataPivot<P, V>> ","io.github.aeckar.collections.DataPivot"]},{"name":"class DataTreeNode<E> : MutableTreeNode<DataTreeNode<E>> , DataNode<DataTreeNode<E>, E> ","description":"io.github.aeckar.collections.DataTreeNode","location":"more.collections/io.github.aeckar.collections/-data-tree-node/index.html","searchKeys":["DataTreeNode","class DataTreeNode<E> : MutableTreeNode<DataTreeNode<E>> , DataNode<DataTreeNode<E>, E> ","io.github.aeckar.collections.DataTreeNode"]},{"name":"class HashMultiSet<E>(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR) : AbstractSet<E> , MutableMultiSet<E> ","description":"io.github.aeckar.collections.HashMultiSet","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/index.html","searchKeys":["HashMultiSet","class HashMultiSet<E>(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR) : AbstractSet<E> , MutableMultiSet<E> ","io.github.aeckar.collections.HashMultiSet"]},{"name":"class MutableBooleanList : BooleanList","description":"io.github.aeckar.collections.MutableBooleanList","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/index.html","searchKeys":["MutableBooleanList","class MutableBooleanList : BooleanList","io.github.aeckar.collections.MutableBooleanList"]},{"name":"class MutableDoubleList : DoubleList","description":"io.github.aeckar.collections.MutableDoubleList","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/index.html","searchKeys":["MutableDoubleList","class MutableDoubleList : DoubleList","io.github.aeckar.collections.MutableDoubleList"]},{"name":"class MutableIntList : IntList","description":"io.github.aeckar.collections.MutableIntList","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/index.html","searchKeys":["MutableIntList","class MutableIntList : IntList","io.github.aeckar.collections.MutableIntList"]},{"name":"class MutableLongList : LongList","description":"io.github.aeckar.collections.MutableLongList","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/index.html","searchKeys":["MutableLongList","class MutableLongList : LongList","io.github.aeckar.collections.MutableLongList"]},{"name":"constructor()","description":"io.github.aeckar.collections.ListNode.ListNode","location":"more.collections/io.github.aeckar.collections/-list-node/-list-node.html","searchKeys":["ListNode","constructor()","io.github.aeckar.collections.ListNode.ListNode"]},{"name":"constructor()","description":"io.github.aeckar.collections.MutableBooleanList.MutableBooleanList","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/-mutable-boolean-list.html","searchKeys":["MutableBooleanList","constructor()","io.github.aeckar.collections.MutableBooleanList.MutableBooleanList"]},{"name":"constructor()","description":"io.github.aeckar.collections.MutableDoubleList.MutableDoubleList","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/-mutable-double-list.html","searchKeys":["MutableDoubleList","constructor()","io.github.aeckar.collections.MutableDoubleList.MutableDoubleList"]},{"name":"constructor()","description":"io.github.aeckar.collections.MutableIntList.MutableIntList","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/-mutable-int-list.html","searchKeys":["MutableIntList","constructor()","io.github.aeckar.collections.MutableIntList.MutableIntList"]},{"name":"constructor()","description":"io.github.aeckar.collections.MutableLongList.MutableLongList","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/-mutable-long-list.html","searchKeys":["MutableLongList","constructor()","io.github.aeckar.collections.MutableLongList.MutableLongList"]},{"name":"constructor(chars: String)","description":"io.github.aeckar.collections.TreeNode.Style.Style","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/-style.html","searchKeys":["Style","constructor(chars: String)","io.github.aeckar.collections.TreeNode.Style.Style"]},{"name":"constructor(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR)","description":"io.github.aeckar.collections.HashMultiSet.HashMultiSet","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/-hash-multi-set.html","searchKeys":["HashMultiSet","constructor(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR)","io.github.aeckar.collections.HashMultiSet.HashMultiSet"]},{"name":"constructor(line: Int, column: Int)","description":"io.github.aeckar.iteration.SourcePosition.SourcePosition","location":"more.collections/io.github.aeckar.iteration/-source-position/-source-position.html","searchKeys":["SourcePosition","constructor(line: Int, column: Int)","io.github.aeckar.iteration.SourcePosition.SourcePosition"]},{"name":"constructor(position: Int = 0)","description":"io.github.aeckar.iteration.PositionalIterator.PositionalIterator","location":"more.collections/io.github.aeckar.iteration/-positional-iterator/-positional-iterator.html","searchKeys":["PositionalIterator","constructor(position: Int = 0)","io.github.aeckar.iteration.PositionalIterator.PositionalIterator"]},{"name":"constructor(revertible: RevertibleIterator<E, P>, init: (P) -> V)","description":"io.github.aeckar.iteration.AbstractPivotIterator.AbstractPivotIterator","location":"more.collections/io.github.aeckar.iteration/-abstract-pivot-iterator/-abstract-pivot-iterator.html","searchKeys":["AbstractPivotIterator","constructor(revertible: RevertibleIterator<E, P>, init: (P) -> V)","io.github.aeckar.iteration.AbstractPivotIterator.AbstractPivotIterator"]},{"name":"constructor(vertical: Char, horizontal: Char, turnstile: Char, corner: Char)","description":"io.github.aeckar.collections.TreeNode.Style.Style","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/-style.html","searchKeys":["Style","constructor(vertical: Char, horizontal: Char, turnstile: Char, corner: Char)","io.github.aeckar.collections.TreeNode.Style.Style"]},{"name":"data class SourcePosition(val line: Int, val column: Int) : Comparable<SourcePosition> ","description":"io.github.aeckar.iteration.SourcePosition","location":"more.collections/io.github.aeckar.iteration/-source-position/index.html","searchKeys":["SourcePosition","data class SourcePosition(val line: Int, val column: Int) : Comparable<SourcePosition> ","io.github.aeckar.iteration.SourcePosition"]},{"name":"data class Style(val vertical: Char, val horizontal: Char, val turnstile: Char, val corner: Char)","description":"io.github.aeckar.collections.TreeNode.Style","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/index.html","searchKeys":["Style","data class Style(val vertical: Char, val horizontal: Char, val turnstile: Char, val corner: Char)","io.github.aeckar.collections.TreeNode.Style"]},{"name":"fun <E, V> List<E>.pivotIterator(init: (Int) -> V): PivotIterator<E, Int, V>","description":"io.github.aeckar.iteration.pivotIterator","location":"more.collections/io.github.aeckar.iteration/pivot-iterator.html","searchKeys":["pivotIterator","fun <E, V> List<E>.pivotIterator(init: (Int) -> V): PivotIterator<E, Int, V>","io.github.aeckar.iteration.pivotIterator"]},{"name":"fun <E> DataTreeNode<E>.readOnly(): ReadOnlyDataTreeNode<E>","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> DataTreeNode<E>.readOnly(): ReadOnlyDataTreeNode<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> List<E>.fromLast(): Iterable<E>","description":"io.github.aeckar.iteration.fromLast","location":"more.collections/io.github.aeckar.iteration/from-last.html","searchKeys":["fromLast","fun <E> List<E>.fromLast(): Iterable<E>","io.github.aeckar.iteration.fromLast"]},{"name":"fun <E> List<E>.readOnly(): ReadOnlyList<E>","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> List<E>.readOnly(): ReadOnlyList<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> List<E>.revertibleIterator(): RevertibleIterator<E, Int>","description":"io.github.aeckar.iteration.revertibleIterator","location":"more.collections/io.github.aeckar.iteration/revertible-iterator.html","searchKeys":["revertibleIterator","fun <E> List<E>.revertibleIterator(): RevertibleIterator<E, Int>","io.github.aeckar.iteration.revertibleIterator"]},{"name":"fun <E> MultiSet<E>.readOnly(): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> MultiSet<E>.readOnly(): ReadOnlyMultiSet<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> Reader.pivotIterator(init: () -> E): CharPivotIterator<SourcePosition, E>","description":"io.github.aeckar.iteration.pivotIterator","location":"more.collections/io.github.aeckar.iteration/pivot-iterator.html","searchKeys":["pivotIterator","fun <E> Reader.pivotIterator(init: () -> E): CharPivotIterator<SourcePosition, E>","io.github.aeckar.iteration.pivotIterator"]},{"name":"fun <E> Set<E>.readOnly(): ReadOnlySet<E>","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> Set<E>.readOnly(): ReadOnlySet<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> emptyMultiSet(): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.emptyMultiSet","location":"more.collections/io.github.aeckar.collections/empty-multi-set.html","searchKeys":["emptyMultiSet","fun <E> emptyMultiSet(): ReadOnlyMultiSet<E>","io.github.aeckar.collections.emptyMultiSet"]},{"name":"fun <E> headOf(vararg elements: E): DataListNode<E>","description":"io.github.aeckar.collections.headOf","location":"more.collections/io.github.aeckar.collections/head-of.html","searchKeys":["headOf","fun <E> headOf(vararg elements: E): DataListNode<E>","io.github.aeckar.collections.headOf"]},{"name":"fun <E> listNodeOf(element: E): DataListNode<E>","description":"io.github.aeckar.collections.listNodeOf","location":"more.collections/io.github.aeckar.collections/list-node-of.html","searchKeys":["listNodeOf","fun <E> listNodeOf(element: E): DataListNode<E>","io.github.aeckar.collections.listNodeOf"]},{"name":"fun <E> multiSetOf(): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.multiSetOf","location":"more.collections/io.github.aeckar.collections/multi-set-of.html","searchKeys":["multiSetOf","fun <E> multiSetOf(): ReadOnlyMultiSet<E>","io.github.aeckar.collections.multiSetOf"]},{"name":"fun <E> multiSetOf(vararg elements: E): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.multiSetOf","location":"more.collections/io.github.aeckar.collections/multi-set-of.html","searchKeys":["multiSetOf","fun <E> multiSetOf(vararg elements: E): ReadOnlyMultiSet<E>","io.github.aeckar.collections.multiSetOf"]},{"name":"fun <E> mutableMultiSetOf(): MutableMultiSet<E>","description":"io.github.aeckar.collections.mutableMultiSetOf","location":"more.collections/io.github.aeckar.collections/mutable-multi-set-of.html","searchKeys":["mutableMultiSetOf","fun <E> mutableMultiSetOf(): MutableMultiSet<E>","io.github.aeckar.collections.mutableMultiSetOf"]},{"name":"fun <E> mutableMultiSetOf(vararg elements: E): MutableMultiSet<E>","description":"io.github.aeckar.collections.mutableMultiSetOf","location":"more.collections/io.github.aeckar.collections/mutable-multi-set-of.html","searchKeys":["mutableMultiSetOf","fun <E> mutableMultiSetOf(vararg elements: E): MutableMultiSet<E>","io.github.aeckar.collections.mutableMultiSetOf"]},{"name":"fun <E> tailOf(vararg elements: E): DataListNode<E>","description":"io.github.aeckar.collections.tailOf","location":"more.collections/io.github.aeckar.collections/tail-of.html","searchKeys":["tailOf","fun <E> tailOf(vararg elements: E): DataListNode<E>","io.github.aeckar.collections.tailOf"]},{"name":"fun <E> treeNodeOf(element: E): DataTreeNode<E>","description":"io.github.aeckar.collections.treeNodeOf","location":"more.collections/io.github.aeckar.collections/tree-node-of.html","searchKeys":["treeNodeOf","fun <E> treeNodeOf(element: E): DataTreeNode<E>","io.github.aeckar.collections.treeNodeOf"]},{"name":"fun <K, V> Map<K, V>.readOnly(): ReadOnlyMap<K, V>","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <K, V> Map<K, V>.readOnly(): ReadOnlyMap<K, V>","io.github.aeckar.collections.readOnly"]},{"name":"fun <P : Comparable<P>, V> headPivotOf(vararg pairs: Pair<P, V>): DataPivot<P, V>","description":"io.github.aeckar.collections.headPivotOf","location":"more.collections/io.github.aeckar.collections/head-pivot-of.html","searchKeys":["headPivotOf","fun <P : Comparable<P>, V> headPivotOf(vararg pairs: Pair<P, V>): DataPivot<P, V>","io.github.aeckar.collections.headPivotOf"]},{"name":"fun <P : Comparable<P>, V> pivotOf(position: P, value: V): DataPivot<P, V>","description":"io.github.aeckar.collections.pivotOf","location":"more.collections/io.github.aeckar.collections/pivot-of.html","searchKeys":["pivotOf","fun <P : Comparable<P>, V> pivotOf(position: P, value: V): DataPivot<P, V>","io.github.aeckar.collections.pivotOf"]},{"name":"fun <P : Comparable<P>, V> tailPivotOf(vararg pairs: Pair<P, V>): DataPivot<P, V>","description":"io.github.aeckar.collections.tailPivotOf","location":"more.collections/io.github.aeckar.collections/tail-pivot-of.html","searchKeys":["tailPivotOf","fun <P : Comparable<P>, V> tailPivotOf(vararg pairs: Pair<P, V>): DataPivot<P, V>","io.github.aeckar.collections.tailPivotOf"]},{"name":"fun <Self : ListNode<Self>> ListNode<Self>?.downToHead(): Iterable<Self>","description":"io.github.aeckar.collections.downToHead","location":"more.collections/io.github.aeckar.collections/down-to-head.html","searchKeys":["downToHead","fun <Self : ListNode<Self>> ListNode<Self>?.downToHead(): Iterable<Self>","io.github.aeckar.collections.downToHead"]},{"name":"fun <Self : ListNode<Self>> Self?.toArrayList(): List<Self>","description":"io.github.aeckar.collections.toArrayList","location":"more.collections/io.github.aeckar.collections/to-array-list.html","searchKeys":["toArrayList","fun <Self : ListNode<Self>> Self?.toArrayList(): List<Self>","io.github.aeckar.collections.toArrayList"]},{"name":"fun <T> Array<T>.fromLast(): Iterable<T>","description":"io.github.aeckar.iteration.fromLast","location":"more.collections/io.github.aeckar.iteration/from-last.html","searchKeys":["fromLast","fun <T> Array<T>.fromLast(): Iterable<T>","io.github.aeckar.iteration.fromLast"]},{"name":"fun <V, P : Comparable<P>> DataPivot<P, V>.getOrInsert(position: P, lazyValue: () -> V): DataPivot<P, V>","description":"io.github.aeckar.collections.getOrInsert","location":"more.collections/io.github.aeckar.collections/get-or-insert.html","searchKeys":["getOrInsert","fun <V, P : Comparable<P>> DataPivot<P, V>.getOrInsert(position: P, lazyValue: () -> V): DataPivot<P, V>","io.github.aeckar.collections.getOrInsert"]},{"name":"fun <V> String.pivotIterator(init: (Int) -> V): CharPivotIterator<Int, V>","description":"io.github.aeckar.iteration.pivotIterator","location":"more.collections/io.github.aeckar.iteration/pivot-iterator.html","searchKeys":["pivotIterator","fun <V> String.pivotIterator(init: (Int) -> V): CharPivotIterator<Int, V>","io.github.aeckar.iteration.pivotIterator"]},{"name":"fun BooleanList.readOnly(): ReadOnlyBooleanList","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun BooleanList.readOnly(): ReadOnlyBooleanList","io.github.aeckar.collections.readOnly"]},{"name":"fun DoubleList.readOnly(): ReadOnlyDoubleList","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun DoubleList.readOnly(): ReadOnlyDoubleList","io.github.aeckar.collections.readOnly"]},{"name":"fun IntList.readOnly(): ReadOnlyIntList","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun IntList.readOnly(): ReadOnlyIntList","io.github.aeckar.collections.readOnly"]},{"name":"fun LongList.readOnly(): ReadOnlyLongList","description":"io.github.aeckar.collections.readOnly","location":"more.collections/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun LongList.readOnly(): ReadOnlyLongList","io.github.aeckar.collections.readOnly"]},{"name":"fun MutableIterator<*>.asRemovable(): Removable","description":"io.github.aeckar.iteration.asRemovable","location":"more.collections/io.github.aeckar.iteration/as-removable.html","searchKeys":["asRemovable","fun MutableIterator<*>.asRemovable(): Removable","io.github.aeckar.iteration.asRemovable"]},{"name":"fun Reader.revertibleIterator(): CharRevertibleIterator<SourcePosition>","description":"io.github.aeckar.iteration.revertibleIterator","location":"more.collections/io.github.aeckar.iteration/revertible-iterator.html","searchKeys":["revertibleIterator","fun Reader.revertibleIterator(): CharRevertibleIterator<SourcePosition>","io.github.aeckar.iteration.revertibleIterator"]},{"name":"fun String.revertibleIterator(): CharRevertibleIterator<Int>","description":"io.github.aeckar.iteration.revertibleIterator","location":"more.collections/io.github.aeckar.iteration/revertible-iterator.html","searchKeys":["revertibleIterator","fun String.revertibleIterator(): CharRevertibleIterator<Int>","io.github.aeckar.iteration.revertibleIterator"]},{"name":"fun head(): Self","description":"io.github.aeckar.collections.ListNode.head","location":"more.collections/io.github.aeckar.collections/-list-node/head.html","searchKeys":["head","fun head(): Self","io.github.aeckar.collections.ListNode.head"]},{"name":"fun insertAfter(element: E): DataListNode<E>","description":"io.github.aeckar.collections.DataListNode.insertAfter","location":"more.collections/io.github.aeckar.collections/-data-list-node/insert-after.html","searchKeys":["insertAfter","fun insertAfter(element: E): DataListNode<E>","io.github.aeckar.collections.DataListNode.insertAfter"]},{"name":"fun insertAfter(node: Self)","description":"io.github.aeckar.collections.ListNode.insertAfter","location":"more.collections/io.github.aeckar.collections/-list-node/insert-after.html","searchKeys":["insertAfter","fun insertAfter(node: Self)","io.github.aeckar.collections.ListNode.insertAfter"]},{"name":"fun insertBefore(element: E): DataListNode<E>","description":"io.github.aeckar.collections.DataListNode.insertBefore","location":"more.collections/io.github.aeckar.collections/-data-list-node/insert-before.html","searchKeys":["insertBefore","fun insertBefore(element: E): DataListNode<E>","io.github.aeckar.collections.DataListNode.insertBefore"]},{"name":"fun insertBefore(node: Self)","description":"io.github.aeckar.collections.ListNode.insertBefore","location":"more.collections/io.github.aeckar.collections/-list-node/insert-before.html","searchKeys":["insertBefore","fun insertBefore(node: Self)","io.github.aeckar.collections.ListNode.insertBefore"]},{"name":"fun interface Removable","description":"io.github.aeckar.iteration.Removable","location":"more.collections/io.github.aeckar.iteration/-removable/index.html","searchKeys":["Removable","fun interface Removable","io.github.aeckar.iteration.Removable"]},{"name":"fun last(): Self","description":"io.github.aeckar.collections.ListNode.last","location":"more.collections/io.github.aeckar.collections/-list-node/last.html","searchKeys":["last","fun last(): Self","io.github.aeckar.collections.ListNode.last"]},{"name":"fun lastOrNull(): Self?","description":"io.github.aeckar.collections.ListNode.lastOrNull","location":"more.collections/io.github.aeckar.collections/-list-node/last-or-null.html","searchKeys":["lastOrNull","fun lastOrNull(): Self?","io.github.aeckar.collections.ListNode.lastOrNull"]},{"name":"fun next(): Self","description":"io.github.aeckar.collections.ListNode.next","location":"more.collections/io.github.aeckar.collections/-list-node/next.html","searchKeys":["next","fun next(): Self","io.github.aeckar.collections.ListNode.next"]},{"name":"fun nextOrNull(): Self?","description":"io.github.aeckar.collections.ListNode.nextOrNull","location":"more.collections/io.github.aeckar.collections/-list-node/next-or-null.html","searchKeys":["nextOrNull","fun nextOrNull(): Self?","io.github.aeckar.collections.ListNode.nextOrNull"]},{"name":"fun removeLast(): Boolean","description":"io.github.aeckar.collections.MutableBooleanList.removeLast","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Boolean","io.github.aeckar.collections.MutableBooleanList.removeLast"]},{"name":"fun removeLast(): Double","description":"io.github.aeckar.collections.MutableDoubleList.removeLast","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Double","io.github.aeckar.collections.MutableDoubleList.removeLast"]},{"name":"fun removeLast(): Int","description":"io.github.aeckar.collections.MutableIntList.removeLast","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Int","io.github.aeckar.collections.MutableIntList.removeLast"]},{"name":"fun removeLast(): Long","description":"io.github.aeckar.collections.MutableLongList.removeLast","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Long","io.github.aeckar.collections.MutableLongList.removeLast"]},{"name":"fun tail(): Self","description":"io.github.aeckar.collections.ListNode.tail","location":"more.collections/io.github.aeckar.collections/-list-node/tail.html","searchKeys":["tail","fun tail(): Self","io.github.aeckar.collections.ListNode.tail"]},{"name":"infix inline fun Boolean.implies(other: () -> Unit): Boolean","description":"io.github.aeckar.iteration.implies","location":"more.collections/io.github.aeckar.iteration/implies.html","searchKeys":["implies","infix inline fun Boolean.implies(other: () -> Unit): Boolean","io.github.aeckar.iteration.implies"]},{"name":"inline fun <E> buildMultiSet(builder: MutableMultiSet<E>.() -> Unit): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.buildMultiSet","location":"more.collections/io.github.aeckar.collections/build-multi-set.html","searchKeys":["buildMultiSet","inline fun <E> buildMultiSet(builder: MutableMultiSet<E>.() -> Unit): ReadOnlyMultiSet<E>","io.github.aeckar.collections.buildMultiSet"]},{"name":"inline fun <E> buildTree(rootElement: E, builder: DataTreeNode<E>.() -> Unit): ReadOnlyDataTreeNode<E>","description":"io.github.aeckar.collections.buildTree","location":"more.collections/io.github.aeckar.collections/build-tree.html","searchKeys":["buildTree","inline fun <E> buildTree(rootElement: E, builder: DataTreeNode<E>.() -> Unit): ReadOnlyDataTreeNode<E>","io.github.aeckar.collections.buildTree"]},{"name":"inline fun <T> Iterable<T>.andEach(transform: (T) -> Boolean): Boolean","description":"io.github.aeckar.iteration.andEach","location":"more.collections/io.github.aeckar.iteration/and-each.html","searchKeys":["andEach","inline fun <T> Iterable<T>.andEach(transform: (T) -> Boolean): Boolean","io.github.aeckar.iteration.andEach"]},{"name":"inline fun <T> Iterable<T>.orEach(transform: (T) -> Boolean): Boolean","description":"io.github.aeckar.iteration.orEach","location":"more.collections/io.github.aeckar.iteration/or-each.html","searchKeys":["orEach","inline fun <T> Iterable<T>.orEach(transform: (T) -> Boolean): Boolean","io.github.aeckar.iteration.orEach"]},{"name":"inline fun <T> MutableIterable<T>.andEachRemovable(transform: Removable.(T) -> Boolean): Boolean","description":"io.github.aeckar.iteration.andEachRemovable","location":"more.collections/io.github.aeckar.iteration/and-each-removable.html","searchKeys":["andEachRemovable","inline fun <T> MutableIterable<T>.andEachRemovable(transform: Removable.(T) -> Boolean): Boolean","io.github.aeckar.iteration.andEachRemovable"]},{"name":"inline fun <T> MutableIterable<T>.orEachRemovable(transform: Removable.(T) -> Boolean): Boolean","description":"io.github.aeckar.iteration.orEachRemovable","location":"more.collections/io.github.aeckar.iteration/or-each-removable.html","searchKeys":["orEachRemovable","inline fun <T> MutableIterable<T>.orEachRemovable(transform: Removable.(T) -> Boolean): Boolean","io.github.aeckar.iteration.orEachRemovable"]},{"name":"inline fun backtrace(predicate: (Self) -> Boolean): Self","description":"io.github.aeckar.collections.ListNode.backtrace","location":"more.collections/io.github.aeckar.collections/-list-node/backtrace.html","searchKeys":["backtrace","inline fun backtrace(predicate: (Self) -> Boolean): Self","io.github.aeckar.collections.ListNode.backtrace"]},{"name":"inline fun seek(predicate: (Self) -> Boolean): Self","description":"io.github.aeckar.collections.ListNode.seek","location":"more.collections/io.github.aeckar.collections/-list-node/seek.html","searchKeys":["seek","inline fun seek(predicate: (Self) -> Boolean): Self","io.github.aeckar.collections.ListNode.seek"]},{"name":"interface BooleanList : PrimitiveList, Iterable<Boolean> ","description":"io.github.aeckar.collections.BooleanList","location":"more.collections/io.github.aeckar.collections/-boolean-list/index.html","searchKeys":["BooleanList","interface BooleanList : PrimitiveList, Iterable<Boolean> ","io.github.aeckar.collections.BooleanList"]},{"name":"interface CharIterator : Iterator<Char> ","description":"io.github.aeckar.iteration.CharIterator","location":"more.collections/io.github.aeckar.iteration/-char-iterator/index.html","searchKeys":["CharIterator","interface CharIterator : Iterator<Char> ","io.github.aeckar.iteration.CharIterator"]},{"name":"interface CharPivotIterator<P : Comparable<P>, V> : PivotIterator<Char, P, V> , CharRevertibleIterator<P> ","description":"io.github.aeckar.iteration.CharPivotIterator","location":"more.collections/io.github.aeckar.iteration/-char-pivot-iterator/index.html","searchKeys":["CharPivotIterator","interface CharPivotIterator<P : Comparable<P>, V> : PivotIterator<Char, P, V> , CharRevertibleIterator<P> ","io.github.aeckar.iteration.CharPivotIterator"]},{"name":"interface CharRevertibleIterator<out P> : RevertibleIterator<Char, P> , CharIterator","description":"io.github.aeckar.iteration.CharRevertibleIterator","location":"more.collections/io.github.aeckar.iteration/-char-revertible-iterator/index.html","searchKeys":["CharRevertibleIterator","interface CharRevertibleIterator<out P> : RevertibleIterator<Char, P> , CharIterator","io.github.aeckar.iteration.CharRevertibleIterator"]},{"name":"interface DataNode<Self : DataNode<Self, E>, out E> : Node<Self> ","description":"io.github.aeckar.collections.DataNode","location":"more.collections/io.github.aeckar.collections/-data-node/index.html","searchKeys":["DataNode","interface DataNode<Self : DataNode<Self, E>, out E> : Node<Self> ","io.github.aeckar.collections.DataNode"]},{"name":"interface DoubleList : PrimitiveList, Iterable<Double> ","description":"io.github.aeckar.collections.DoubleList","location":"more.collections/io.github.aeckar.collections/-double-list/index.html","searchKeys":["DoubleList","interface DoubleList : PrimitiveList, Iterable<Double> ","io.github.aeckar.collections.DoubleList"]},{"name":"interface IntList : PrimitiveList, Iterable<Int> ","description":"io.github.aeckar.collections.IntList","location":"more.collections/io.github.aeckar.collections/-int-list/index.html","searchKeys":["IntList","interface IntList : PrimitiveList, Iterable<Int> ","io.github.aeckar.collections.IntList"]},{"name":"interface LongList : PrimitiveList, Iterable<Long> ","description":"io.github.aeckar.collections.LongList","location":"more.collections/io.github.aeckar.collections/-long-list/index.html","searchKeys":["LongList","interface LongList : PrimitiveList, Iterable<Long> ","io.github.aeckar.collections.LongList"]},{"name":"interface MultiSet<E> : Set<E> ","description":"io.github.aeckar.collections.MultiSet","location":"more.collections/io.github.aeckar.collections/-multi-set/index.html","searchKeys":["MultiSet","interface MultiSet<E> : Set<E> ","io.github.aeckar.collections.MultiSet"]},{"name":"interface MutableMultiSet<E> : MultiSet<E> , MutableSet<E> , MutableIterable<E> ","description":"io.github.aeckar.collections.MutableMultiSet","location":"more.collections/io.github.aeckar.collections/-mutable-multi-set/index.html","searchKeys":["MutableMultiSet","interface MutableMultiSet<E> : MultiSet<E> , MutableSet<E> , MutableIterable<E> ","io.github.aeckar.collections.MutableMultiSet"]},{"name":"interface MutableTreeNode<Self : MutableTreeNode<Self>> : TreeNode<Self> ","description":"io.github.aeckar.collections.MutableTreeNode","location":"more.collections/io.github.aeckar.collections/-mutable-tree-node/index.html","searchKeys":["MutableTreeNode","interface MutableTreeNode<Self : MutableTreeNode<Self>> : TreeNode<Self> ","io.github.aeckar.collections.MutableTreeNode"]},{"name":"interface Node<Self : Node<Self>> : Iterable<Self> ","description":"io.github.aeckar.collections.Node","location":"more.collections/io.github.aeckar.collections/-node/index.html","searchKeys":["Node","interface Node<Self : Node<Self>> : Iterable<Self> ","io.github.aeckar.collections.Node"]},{"name":"interface PivotIterator<out E, P : Comparable<P>, V> : RevertibleIterator<E, P> ","description":"io.github.aeckar.iteration.PivotIterator","location":"more.collections/io.github.aeckar.iteration/-pivot-iterator/index.html","searchKeys":["PivotIterator","interface PivotIterator<out E, P : Comparable<P>, V> : RevertibleIterator<E, P> ","io.github.aeckar.iteration.PivotIterator"]},{"name":"interface RevertibleIterator<out E, out P> : Iterator<E> ","description":"io.github.aeckar.iteration.RevertibleIterator","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/index.html","searchKeys":["RevertibleIterator","interface RevertibleIterator<out E, out P> : Iterator<E> ","io.github.aeckar.iteration.RevertibleIterator"]},{"name":"interface TreeNode<Self : TreeNode<Self>> : Node<Self> ","description":"io.github.aeckar.collections.TreeNode","location":"more.collections/io.github.aeckar.collections/-tree-node/index.html","searchKeys":["TreeNode","interface TreeNode<Self : TreeNode<Self>> : Node<Self> ","io.github.aeckar.collections.TreeNode"]},{"name":"object Companion","description":"io.github.aeckar.collections.TreeNode.Companion","location":"more.collections/io.github.aeckar.collections/-tree-node/-companion/index.html","searchKeys":["Companion","object Companion","io.github.aeckar.collections.TreeNode.Companion"]},{"name":"open fun isExhausted(): Boolean","description":"io.github.aeckar.iteration.RevertibleIterator.isExhausted","location":"more.collections/io.github.aeckar.iteration/-revertible-iterator/is-exhausted.html","searchKeys":["isExhausted","open fun isExhausted(): Boolean","io.github.aeckar.iteration.RevertibleIterator.isExhausted"]},{"name":"open fun nodeString(): String","description":"io.github.aeckar.collections.Node.nodeString","location":"more.collections/io.github.aeckar.collections/-node/node-string.html","searchKeys":["nodeString","open fun nodeString(): String","io.github.aeckar.collections.Node.nodeString"]},{"name":"open fun treeString(lines: TreeNode.Style = UTF_8): String","description":"io.github.aeckar.collections.TreeNode.treeString","location":"more.collections/io.github.aeckar.collections/-tree-node/tree-string.html","searchKeys":["treeString","open fun treeString(lines: TreeNode.Style = UTF_8): String","io.github.aeckar.collections.TreeNode.treeString"]},{"name":"open operator fun plus(node: Self): MutableTreeNode<Self>","description":"io.github.aeckar.collections.MutableTreeNode.plus","location":"more.collections/io.github.aeckar.collections/-mutable-tree-node/plus.html","searchKeys":["plus","open operator fun plus(node: Self): MutableTreeNode<Self>","io.github.aeckar.collections.MutableTreeNode.plus"]},{"name":"open operator fun plusAssign(node: Self)","description":"io.github.aeckar.collections.MutableTreeNode.plusAssign","location":"more.collections/io.github.aeckar.collections/-mutable-tree-node/plus-assign.html","searchKeys":["plusAssign","open operator fun plusAssign(node: Self)","io.github.aeckar.collections.MutableTreeNode.plusAssign"]},{"name":"open operator override fun compareTo(other: SourcePosition): Int","description":"io.github.aeckar.iteration.SourcePosition.compareTo","location":"more.collections/io.github.aeckar.iteration/-source-position/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: SourcePosition): Int","io.github.aeckar.iteration.SourcePosition.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.aeckar.collections.DataListNode.equals","location":"more.collections/io.github.aeckar.collections/-data-list-node/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.aeckar.collections.DataListNode.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.aeckar.collections.DataPivot.equals","location":"more.collections/io.github.aeckar.collections/-data-pivot/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.aeckar.collections.DataPivot.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.aeckar.collections.DataTreeNode.equals","location":"more.collections/io.github.aeckar.collections/-data-tree-node/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.aeckar.collections.DataTreeNode.equals"]},{"name":"open operator override fun get(index: Int): Boolean","description":"io.github.aeckar.collections.MutableBooleanList.get","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Boolean","io.github.aeckar.collections.MutableBooleanList.get"]},{"name":"open operator override fun get(index: Int): Double","description":"io.github.aeckar.collections.MutableDoubleList.get","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Double","io.github.aeckar.collections.MutableDoubleList.get"]},{"name":"open operator override fun get(index: Int): Int","description":"io.github.aeckar.collections.MutableIntList.get","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Int","io.github.aeckar.collections.MutableIntList.get"]},{"name":"open operator override fun get(index: Int): Long","description":"io.github.aeckar.collections.MutableLongList.get","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Long","io.github.aeckar.collections.MutableLongList.get"]},{"name":"open operator override fun iterator(): BooleanIterator","description":"io.github.aeckar.collections.MutableBooleanList.iterator","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): BooleanIterator","io.github.aeckar.collections.MutableBooleanList.iterator"]},{"name":"open operator override fun iterator(): DoubleIterator","description":"io.github.aeckar.collections.MutableDoubleList.iterator","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): DoubleIterator","io.github.aeckar.collections.MutableDoubleList.iterator"]},{"name":"open operator override fun iterator(): IntIterator","description":"io.github.aeckar.collections.MutableIntList.iterator","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): IntIterator","io.github.aeckar.collections.MutableIntList.iterator"]},{"name":"open operator override fun iterator(): Iterator<Self>","description":"io.github.aeckar.collections.ListNode.iterator","location":"more.collections/io.github.aeckar.collections/-list-node/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Self>","io.github.aeckar.collections.ListNode.iterator"]},{"name":"open operator override fun iterator(): Iterator<Self>","description":"io.github.aeckar.collections.TreeNode.iterator","location":"more.collections/io.github.aeckar.collections/-tree-node/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Self>","io.github.aeckar.collections.TreeNode.iterator"]},{"name":"open operator override fun iterator(): LongIterator","description":"io.github.aeckar.collections.MutableLongList.iterator","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): LongIterator","io.github.aeckar.collections.MutableLongList.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<E>","description":"io.github.aeckar.collections.HashMultiSet.iterator","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<E>","io.github.aeckar.collections.HashMultiSet.iterator"]},{"name":"open override fun add(element: E): Boolean","description":"io.github.aeckar.collections.HashMultiSet.add","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/add.html","searchKeys":["add","open override fun add(element: E): Boolean","io.github.aeckar.collections.HashMultiSet.add"]},{"name":"open override fun addAll(elements: Collection<E>): Boolean","description":"io.github.aeckar.collections.HashMultiSet.addAll","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<E>): Boolean","io.github.aeckar.collections.HashMultiSet.addAll"]},{"name":"open override fun clear()","description":"io.github.aeckar.collections.HashMultiSet.clear","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/clear.html","searchKeys":["clear","open override fun clear()","io.github.aeckar.collections.HashMultiSet.clear"]},{"name":"open override fun count(element: E): Int","description":"io.github.aeckar.collections.HashMultiSet.count","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/count.html","searchKeys":["count","open override fun count(element: E): Int","io.github.aeckar.collections.HashMultiSet.count"]},{"name":"open override fun hashCode(): Int","description":"io.github.aeckar.collections.DataListNode.hashCode","location":"more.collections/io.github.aeckar.collections/-data-list-node/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.aeckar.collections.DataListNode.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.aeckar.collections.DataPivot.hashCode","location":"more.collections/io.github.aeckar.collections/-data-pivot/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.aeckar.collections.DataPivot.hashCode"]},{"name":"open override fun hashCode(): Int","description":"io.github.aeckar.collections.DataTreeNode.hashCode","location":"more.collections/io.github.aeckar.collections/-data-tree-node/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.aeckar.collections.DataTreeNode.hashCode"]},{"name":"open override fun linkedString(): String","description":"io.github.aeckar.collections.ListNode.linkedString","location":"more.collections/io.github.aeckar.collections/-list-node/linked-string.html","searchKeys":["linkedString","open override fun linkedString(): String","io.github.aeckar.collections.ListNode.linkedString"]},{"name":"open override fun linkedString(): String","description":"io.github.aeckar.collections.TreeNode.linkedString","location":"more.collections/io.github.aeckar.collections/-tree-node/linked-string.html","searchKeys":["linkedString","open override fun linkedString(): String","io.github.aeckar.collections.TreeNode.linkedString"]},{"name":"open override fun nodeString(): String","description":"io.github.aeckar.collections.DataNode.nodeString","location":"more.collections/io.github.aeckar.collections/-data-node/node-string.html","searchKeys":["nodeString","open override fun nodeString(): String","io.github.aeckar.collections.DataNode.nodeString"]},{"name":"open override fun peek(): Char","description":"io.github.aeckar.iteration.CharRevertibleIterator.peek","location":"more.collections/io.github.aeckar.iteration/-char-revertible-iterator/peek.html","searchKeys":["peek","open override fun peek(): Char","io.github.aeckar.iteration.CharRevertibleIterator.peek"]},{"name":"open override fun pivots(): List<DataPivot<P, V>>","description":"io.github.aeckar.iteration.AbstractPivotIterator.pivots","location":"more.collections/io.github.aeckar.iteration/-abstract-pivot-iterator/pivots.html","searchKeys":["pivots","open override fun pivots(): List<DataPivot<P, V>>","io.github.aeckar.iteration.AbstractPivotIterator.pivots"]},{"name":"open override fun remove(element: E): Boolean","description":"io.github.aeckar.collections.HashMultiSet.remove","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","io.github.aeckar.collections.HashMultiSet.remove"]},{"name":"open override fun removeAll(elements: Collection<E>): Boolean","description":"io.github.aeckar.collections.HashMultiSet.removeAll","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<E>): Boolean","io.github.aeckar.collections.HashMultiSet.removeAll"]},{"name":"open override fun retainAll(elements: Collection<E>): Boolean","description":"io.github.aeckar.collections.HashMultiSet.retainAll","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<E>): Boolean","io.github.aeckar.collections.HashMultiSet.retainAll"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.DataListNode.toString","location":"more.collections/io.github.aeckar.collections/-data-list-node/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.DataListNode.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.DataPivot.toString","location":"more.collections/io.github.aeckar.collections/-data-pivot/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.DataPivot.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.DataTreeNode.toString","location":"more.collections/io.github.aeckar.collections/-data-tree-node/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.DataTreeNode.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.MutableBooleanList.toString","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.MutableBooleanList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.MutableDoubleList.toString","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.MutableDoubleList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.MutableIntList.toString","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.MutableIntList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.MutableLongList.toString","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.MutableLongList.toString"]},{"name":"open override val children: MutableList<DataTreeNode<E>>","description":"io.github.aeckar.collections.DataTreeNode.children","location":"more.collections/io.github.aeckar.collections/-data-tree-node/children.html","searchKeys":["children","open override val children: MutableList<DataTreeNode<E>>","io.github.aeckar.collections.DataTreeNode.children"]},{"name":"open override val element: E","description":"io.github.aeckar.collections.DataListNode.element","location":"more.collections/io.github.aeckar.collections/-data-list-node/element.html","searchKeys":["element","open override val element: E","io.github.aeckar.collections.DataListNode.element"]},{"name":"open override val element: E","description":"io.github.aeckar.collections.DataTreeNode.element","location":"more.collections/io.github.aeckar.collections/-data-tree-node/element.html","searchKeys":["element","open override val element: E","io.github.aeckar.collections.DataTreeNode.element"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.HashMultiSet.size","location":"more.collections/io.github.aeckar.collections/-hash-multi-set/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.HashMultiSet.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.MutableBooleanList.size","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.MutableBooleanList.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.MutableDoubleList.size","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.MutableDoubleList.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.MutableIntList.size","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.MutableIntList.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.MutableLongList.size","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.MutableLongList.size"]},{"name":"open val children: List<Self>","description":"io.github.aeckar.collections.TreeNode.children","location":"more.collections/io.github.aeckar.collections/-tree-node/children.html","searchKeys":["children","open val children: List<Self>","io.github.aeckar.collections.TreeNode.children"]},{"name":"operator fun <E> DataNode<*, E>.component1(): E","description":"io.github.aeckar.collections.component1","location":"more.collections/io.github.aeckar.collections/component1.html","searchKeys":["component1","operator fun <E> DataNode<*, E>.component1(): E","io.github.aeckar.collections.component1"]},{"name":"operator fun plus(value: E): DataTreeNode<E>","description":"io.github.aeckar.collections.DataTreeNode.plus","location":"more.collections/io.github.aeckar.collections/-data-tree-node/plus.html","searchKeys":["plus","operator fun plus(value: E): DataTreeNode<E>","io.github.aeckar.collections.DataTreeNode.plus"]},{"name":"operator fun plusAssign(element: Boolean)","description":"io.github.aeckar.collections.MutableBooleanList.plusAssign","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Boolean)","io.github.aeckar.collections.MutableBooleanList.plusAssign"]},{"name":"operator fun plusAssign(element: Double)","description":"io.github.aeckar.collections.MutableDoubleList.plusAssign","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Double)","io.github.aeckar.collections.MutableDoubleList.plusAssign"]},{"name":"operator fun plusAssign(element: Int)","description":"io.github.aeckar.collections.MutableIntList.plusAssign","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Int)","io.github.aeckar.collections.MutableIntList.plusAssign"]},{"name":"operator fun plusAssign(element: Long)","description":"io.github.aeckar.collections.MutableLongList.plusAssign","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Long)","io.github.aeckar.collections.MutableLongList.plusAssign"]},{"name":"operator fun plusAssign(value: E)","description":"io.github.aeckar.collections.DataTreeNode.plusAssign","location":"more.collections/io.github.aeckar.collections/-data-tree-node/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(value: E)","io.github.aeckar.collections.DataTreeNode.plusAssign"]},{"name":"override fun here(): V","description":"io.github.aeckar.iteration.AbstractPivotIterator.here","location":"more.collections/io.github.aeckar.iteration/-abstract-pivot-iterator/here.html","searchKeys":["here","override fun here(): V","io.github.aeckar.iteration.AbstractPivotIterator.here"]},{"name":"sealed interface PrimitiveList","description":"io.github.aeckar.collections.PrimitiveList","location":"more.collections/io.github.aeckar.collections/-primitive-list/index.html","searchKeys":["PrimitiveList","sealed interface PrimitiveList","io.github.aeckar.collections.PrimitiveList"]},{"name":"sealed interface ReadOnlyBooleanList : BooleanList","description":"io.github.aeckar.collections.ReadOnlyBooleanList","location":"more.collections/io.github.aeckar.collections/-read-only-boolean-list/index.html","searchKeys":["ReadOnlyBooleanList","sealed interface ReadOnlyBooleanList : BooleanList","io.github.aeckar.collections.ReadOnlyBooleanList"]},{"name":"sealed interface ReadOnlyCollection<E> : Collection<E> ","description":"io.github.aeckar.collections.ReadOnlyCollection","location":"more.collections/io.github.aeckar.collections/-read-only-collection/index.html","searchKeys":["ReadOnlyCollection","sealed interface ReadOnlyCollection<E> : Collection<E> ","io.github.aeckar.collections.ReadOnlyCollection"]},{"name":"sealed interface ReadOnlyDataTreeNode<V> : TreeNode<ReadOnlyDataTreeNode<V>> , DataNode<ReadOnlyDataTreeNode<V>, V> ","description":"io.github.aeckar.collections.ReadOnlyDataTreeNode","location":"more.collections/io.github.aeckar.collections/-read-only-data-tree-node/index.html","searchKeys":["ReadOnlyDataTreeNode","sealed interface ReadOnlyDataTreeNode<V> : TreeNode<ReadOnlyDataTreeNode<V>> , DataNode<ReadOnlyDataTreeNode<V>, V> ","io.github.aeckar.collections.ReadOnlyDataTreeNode"]},{"name":"sealed interface ReadOnlyDoubleList : DoubleList","description":"io.github.aeckar.collections.ReadOnlyDoubleList","location":"more.collections/io.github.aeckar.collections/-read-only-double-list/index.html","searchKeys":["ReadOnlyDoubleList","sealed interface ReadOnlyDoubleList : DoubleList","io.github.aeckar.collections.ReadOnlyDoubleList"]},{"name":"sealed interface ReadOnlyIntList : IntList","description":"io.github.aeckar.collections.ReadOnlyIntList","location":"more.collections/io.github.aeckar.collections/-read-only-int-list/index.html","searchKeys":["ReadOnlyIntList","sealed interface ReadOnlyIntList : IntList","io.github.aeckar.collections.ReadOnlyIntList"]},{"name":"sealed interface ReadOnlyList<E> : ReadOnlyCollection<E> , List<E> ","description":"io.github.aeckar.collections.ReadOnlyList","location":"more.collections/io.github.aeckar.collections/-read-only-list/index.html","searchKeys":["ReadOnlyList","sealed interface ReadOnlyList<E> : ReadOnlyCollection<E> , List<E> ","io.github.aeckar.collections.ReadOnlyList"]},{"name":"sealed interface ReadOnlyLongList : LongList","description":"io.github.aeckar.collections.ReadOnlyLongList","location":"more.collections/io.github.aeckar.collections/-read-only-long-list/index.html","searchKeys":["ReadOnlyLongList","sealed interface ReadOnlyLongList : LongList","io.github.aeckar.collections.ReadOnlyLongList"]},{"name":"sealed interface ReadOnlyMap<K, V> : Map<K, V> ","description":"io.github.aeckar.collections.ReadOnlyMap","location":"more.collections/io.github.aeckar.collections/-read-only-map/index.html","searchKeys":["ReadOnlyMap","sealed interface ReadOnlyMap<K, V> : Map<K, V> ","io.github.aeckar.collections.ReadOnlyMap"]},{"name":"sealed interface ReadOnlyMultiSet<E> : MultiSet<E> , ReadOnlySet<E> ","description":"io.github.aeckar.collections.ReadOnlyMultiSet","location":"more.collections/io.github.aeckar.collections/-read-only-multi-set/index.html","searchKeys":["ReadOnlyMultiSet","sealed interface ReadOnlyMultiSet<E> : MultiSet<E> , ReadOnlySet<E> ","io.github.aeckar.collections.ReadOnlyMultiSet"]},{"name":"sealed interface ReadOnlySet<E> : Set<E> ","description":"io.github.aeckar.collections.ReadOnlySet","location":"more.collections/io.github.aeckar.collections/-read-only-set/index.html","searchKeys":["ReadOnlySet","sealed interface ReadOnlySet<E> : Set<E> ","io.github.aeckar.collections.ReadOnlySet"]},{"name":"val ASCII: TreeNode.Style","description":"io.github.aeckar.collections.TreeNode.Companion.ASCII","location":"more.collections/io.github.aeckar.collections/-tree-node/-companion/-a-s-c-i-i.html","searchKeys":["ASCII","val ASCII: TreeNode.Style","io.github.aeckar.collections.TreeNode.Companion.ASCII"]},{"name":"val UTF_8: TreeNode.Style","description":"io.github.aeckar.collections.TreeNode.Companion.UTF_8","location":"more.collections/io.github.aeckar.collections/-tree-node/-companion/-u-t-f_8.html","searchKeys":["UTF_8","val UTF_8: TreeNode.Style","io.github.aeckar.collections.TreeNode.Companion.UTF_8"]},{"name":"val column: Int","description":"io.github.aeckar.iteration.SourcePosition.column","location":"more.collections/io.github.aeckar.iteration/-source-position/column.html","searchKeys":["column","val column: Int","io.github.aeckar.iteration.SourcePosition.column"]},{"name":"val corner: Char","description":"io.github.aeckar.collections.TreeNode.Style.corner","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/corner.html","searchKeys":["corner","val corner: Char","io.github.aeckar.collections.TreeNode.Style.corner"]},{"name":"val horizontal: Char","description":"io.github.aeckar.collections.TreeNode.Style.horizontal","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/horizontal.html","searchKeys":["horizontal","val horizontal: Char","io.github.aeckar.collections.TreeNode.Style.horizontal"]},{"name":"val line: Int","description":"io.github.aeckar.iteration.SourcePosition.line","location":"more.collections/io.github.aeckar.iteration/-source-position/line.html","searchKeys":["line","val line: Int","io.github.aeckar.iteration.SourcePosition.line"]},{"name":"val position: P","description":"io.github.aeckar.collections.DataPivot.position","location":"more.collections/io.github.aeckar.collections/-data-pivot/position.html","searchKeys":["position","val position: P","io.github.aeckar.collections.DataPivot.position"]},{"name":"val turnstile: Char","description":"io.github.aeckar.collections.TreeNode.Style.turnstile","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/turnstile.html","searchKeys":["turnstile","val turnstile: Char","io.github.aeckar.collections.TreeNode.Style.turnstile"]},{"name":"val value: V","description":"io.github.aeckar.collections.DataPivot.value","location":"more.collections/io.github.aeckar.collections/-data-pivot/value.html","searchKeys":["value","val value: V","io.github.aeckar.collections.DataPivot.value"]},{"name":"val vertical: Char","description":"io.github.aeckar.collections.TreeNode.Style.vertical","location":"more.collections/io.github.aeckar.collections/-tree-node/-style/vertical.html","searchKeys":["vertical","val vertical: Char","io.github.aeckar.collections.TreeNode.Style.vertical"]},{"name":"var last: Boolean","description":"io.github.aeckar.collections.MutableBooleanList.last","location":"more.collections/io.github.aeckar.collections/-mutable-boolean-list/last.html","searchKeys":["last","var last: Boolean","io.github.aeckar.collections.MutableBooleanList.last"]},{"name":"var last: Double","description":"io.github.aeckar.collections.MutableDoubleList.last","location":"more.collections/io.github.aeckar.collections/-mutable-double-list/last.html","searchKeys":["last","var last: Double","io.github.aeckar.collections.MutableDoubleList.last"]},{"name":"var last: Int","description":"io.github.aeckar.collections.MutableIntList.last","location":"more.collections/io.github.aeckar.collections/-mutable-int-list/last.html","searchKeys":["last","var last: Int","io.github.aeckar.collections.MutableIntList.last"]},{"name":"var last: Long","description":"io.github.aeckar.collections.MutableLongList.last","location":"more.collections/io.github.aeckar.collections/-mutable-long-list/last.html","searchKeys":["last","var last: Long","io.github.aeckar.collections.MutableLongList.last"]}]
